{"version":3,"sources":["scripts/main.js"],"names":["theadRef","document","querySelector","tbodyRef","tableHeaders","querySelectorAll","tableRows","ascClass","addEventListener","e","currentRows","headerIndex","target","cellIndex","classList","toggle","isAsc","contains","sort","a","b","valueType","textContent","aText","cells","bText","localeCompare","normalizeSalary","item","slice","split","join","forEach","append","activeClass","standardizeString","str","reduce","line","word","isNaN","trim","toUpperCase","remove","parentElement","add","formEl","createElement","labelEl","headerTitle","inputEl","type","min","name","toLowerCase","dataset","qa","selectEl","city","optionEl","submitBtn","body","preventDefault","data","FormData","dataObj","Object","fromEntries","entries","rowEl","notification","notificationTitle","notificationDescription","addError","message","length","position","age","salary","key","Intl","NumberFormat","format","cellEl","reset","setTimeout","oldText","validateInput","cell","value","focus","evnt"],"mappings":";AAAA,aA2MA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzMA,IAAMA,EAAWC,SAASC,cAAc,SAClCC,EAAWF,SAASC,cAAc,SAClCE,EAAeJ,EAASK,iBAAiB,MACzCC,EAAgBH,EAAAA,EAASE,iBAAiB,OAI1CE,EAAW,MAEjBP,EAASQ,iBAAiB,QAAS,SAACC,GAC5BC,IAAAA,EAAkBP,EAAAA,EAASE,iBAAiB,OAC5CM,EAAcF,EAAEG,OAAOC,UAE7BJ,EAAEG,OAAOE,UAAUC,OAAOR,GAEpBS,IAAAA,EAAQP,EAAEG,OAAOE,UAAUG,SAASV,GAE1CG,EAAYQ,KAAK,SAACC,EAAGC,GACbC,IAAAA,EAAYZ,EAAEG,OAAOU,YACrBC,EAAQJ,EAAEK,MAAMb,GAAaW,YAC7BG,EAAQL,EAAEI,MAAMb,GAAaW,YAE3BD,OAAAA,GACD,IAAA,OACA,IAAA,WACA,IAAA,SACCL,OAAAA,EACKO,EAAMG,cAAcD,GAGtBA,EAAMC,cAAcH,GAExB,IAAA,MACCP,OAAAA,EACKO,EAAQE,EAGVA,EAAQF,EAEZ,IAAA,SACGI,IAAAA,EAAkB,SAACC,GAASA,OAAAA,EAAKC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAE5Df,OAAAA,EACKW,EAAgBJ,GAASI,EAAgBF,GAG3CE,EAAgBF,GAASE,EAAgBJ,MAMtDb,EAAYsB,QAAQ,SAAAJ,GAAQzB,OAAAA,EAAS8B,OAAOL,OAK9C,IAAMM,EAAc,SAYpB,SAASC,EAAkBC,GAClBA,OAAAA,EACJN,MAAM,KACNO,OAAO,SAACC,EAAMC,GACTC,OAAAA,MAAMD,EAAKE,QACNH,EAAOC,EAAK,GAAGG,cAAgBH,EAAKV,MAAM,GAAK,IAGjDS,GACN,GACFT,MAAM,GApBX1B,EAASK,iBAAiB,QAAS,SAACC,GAClCH,EAAU0B,QAAQ,SAAAJ,GAAQA,OAAAA,EAAKd,UAAU6B,OAAOT,KAChDzB,EAAEG,OAAOgC,cAAc9B,UAAU+B,IAAIX,KAqBvC,IAAMY,EAAS7C,SAAS8C,cAAc,QAEtCD,EAAOhC,UAAU+B,IAAI,qBAErBzC,EAAa4B,QAAQ,SAAAJ,GACboB,IAAAA,EAAU/C,SAAS8C,cAAc,SACjCE,EAAcrB,EAAKN,YAIrB2B,GAFJD,EAAQ1B,YAAcM,EAAKN,YAAc,IAErB,WAAhB2B,EAA0B,CACtBC,IAAAA,EAAUjD,SAAS8C,cAAc,SAEnB,QAAhBE,GAAyC,WAAhBA,GAC3BC,EAAQC,KAAO,SACfD,EAAQE,IAAM,GAEdF,EAAQC,KAAO,OAGjBD,EAAQG,KAAOJ,EAAYK,cAC3BJ,EAAQK,QAAQC,GAAKP,EAAYK,cAEjCN,EAAQf,OAAOiB,OACV,CACCO,IAAAA,EAAWxD,SAAS8C,cAAc,UAClB,CAAC,QAAS,YAAa,SAAU,WACrD,YAAa,iBAEDf,QAAQ,SAAA0B,GACdC,IAAAA,EAAW1D,SAAS8C,cAAc,UAExCY,EAASrC,YAAcoC,EACvBD,EAASxB,OAAO0B,KAGlBF,EAASJ,KAAOJ,EAAYK,cAC5BG,EAASF,QAAQC,GAAKP,EAAYK,cAClCN,EAAQf,OAAOwB,GAGjBX,EAAOb,OAAOe,KAGhB,IAAMY,EAAY3D,SAAS8C,cAAc,UAEzCa,EAAUT,KAAO,SACjBS,EAAUtC,YAAc,gBAExBwB,EAAOb,OAAO2B,GACd3D,SAAS4D,KAAK5B,OAAOa,GAErBA,EAAOtC,iBAAiB,SAAU,SAACC,GACjCA,EAAEqD,iBAEE7D,SAASC,cAAc,kBACzBD,SAASC,cAAc,iBAAiByC,SAGpCoB,IAAAA,EAAO,IAAIC,SAASlB,GACpBmB,EAAUC,OAAOC,YAAYJ,EAAKK,WAClCC,EAAQpE,SAAS8C,cAAc,MAE/BuB,EAAerE,SAAS8C,cAAc,OACtCwB,EAAoBtE,SAAS8C,cAAc,MAC3CyB,EAA0BvE,SAAS8C,cAAc,KAEvDuB,EAAaf,QAAQC,GAAK,eAC1Bc,EAAaxD,UAAU+B,IAAI,gBAE3B0B,EAAkBzD,UAAU+B,IAAI,SAE1B4B,IAAAA,EAAW,SAACC,GAChBJ,EAAaxD,UAAU+B,IAAI,SAC3B0B,EAAkBjD,YAAc,QAEhCkD,EAAwBlD,YAAcoD,GAGpCT,GAAAA,EAAQZ,KAAKsB,OAAS,IAAOnC,MAAMyB,EAAQZ,MAC7CoB,EAAS,oEAEJ,GAAIR,EAAQW,SAASD,OAAS,IAAOnC,MAAMyB,EAAQW,UACxDH,EAAS,wEAEJ,GAAIR,EAAQY,IAAM,IAAMZ,EAAQY,IAAM,GAC3CJ,EAAS,sCACJ,GAAuB,KAAnBR,EAAQa,OACjBL,EAAS,gCACJ,CASA,IAAA,IAAMM,KARXT,EAAaxD,UAAU+B,IAAI,WAC3B0B,EAAkBjD,YAAc,UAEhC2C,EAAQa,OAAS,IAAM,IAAIE,KAAKC,aAAa,SAC1CC,OAAOjB,EAAQa,QAElBN,EAAwBlD,YAAc,+BAEpB2C,EAAS,CACnBkB,IAAAA,EAASlF,SAAS8C,cAAc,MAElCP,MAAMyB,EAAQc,MAChBd,EAAQc,GAAO5C,EAAkB8B,EAAQc,KAG3CI,EAAO7D,YAAc2C,EAAQc,GAC7BV,EAAMpC,OAAOkD,GAEfhF,EAAS8B,OAAOoC,GAChB5D,EAAEG,OAAOwE,QAGXd,EAAarC,OAAOsC,EAAmBC,GACvCvE,SAAS4D,KAAK5B,OAAOqC,GACrBe,WAAW,WAAMf,OAAAA,EAAa3B,UAAU,OAK1CxC,EAASK,iBAAiB,WAAY,SAACC,GAC/B6E,IAAAA,EAAU7E,EAAEG,OAAOU,YAEzBb,EAAEG,OAAOU,YAAc,GAEjB4B,IAAAA,EAAUjD,SAAS8C,cAAc,SAM9BwC,SAAAA,EAAcC,GACbA,OAAAA,GACD,KAAA,EACA,KAAA,EACA,KAAA,EACEhD,MAAMU,EAAQuC,QAAmC,IAAzBvC,EAAQuC,MAAMd,OAGzClE,EAAEG,OAAOU,YAAca,EAAkBe,EAAQuC,OAFjDhF,EAAEG,OAAOU,YAAcgE,EAIzB,MAEG,KAAA,EACC9C,MAAMU,EAAQuC,QAAmC,IAAzBvC,EAAQuC,MAAMd,OACxClE,EAAEG,OAAOU,YAAcgE,EAEvB7E,EAAEG,OAAOU,YAAc4B,EAAQuC,MAEjC,MAEG,KAAA,EACCjD,MAAMU,EAAQuC,QAAmC,IAAzBvC,EAAQuC,MAAMd,OACxClE,EAAEG,OAAOU,YAAcgE,EAEvB7E,EAAEG,OAAOU,YAAc,IAAM,IAAI0D,KAAKC,aAAa,SAChDC,OAAOhC,EAAQuC,QA7B1BvC,EAAQpC,UAAU+B,IAAI,cACtBpC,EAAEG,OAAOqB,OAAOiB,GAChBA,EAAQwC,QAkCRxC,EAAQ1C,iBAAiB,OAAQ,SAACmF,GAGhCJ,EAFc9E,EAAEG,OAAOC,aAKzBqC,EAAQ1C,iBAAiB,UAAW,SAACmF,GAClB,UAAbA,EAAKZ,KAGPQ,EAFc9E,EAAEG,OAAOC","file":"main.718118f8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst theadRef = document.querySelector('thead');\nconst tbodyRef = document.querySelector('tbody');\nconst tableHeaders = theadRef.querySelectorAll('th');\nconst tableRows = [...tbodyRef.querySelectorAll('tr')];\n\n// 1. Implement table sorting by clicking on the\n// title (in two directions).\nconst ascClass = 'asc';\n\ntheadRef.addEventListener('click', (e) => {\n  const currentRows = [...tbodyRef.querySelectorAll('tr')];\n  const headerIndex = e.target.cellIndex;\n\n  e.target.classList.toggle(ascClass);\n\n  const isAsc = e.target.classList.contains(ascClass);\n\n  currentRows.sort((a, b) => {\n    const valueType = e.target.textContent;\n    const aText = a.cells[headerIndex].textContent;\n    const bText = b.cells[headerIndex].textContent;\n\n    switch (valueType) {\n      case 'Name':\n      case 'Position':\n      case 'Office':\n        if (isAsc) {\n          return aText.localeCompare(bText);\n        }\n\n        return bText.localeCompare(aText);\n\n      case 'Age':\n        if (isAsc) {\n          return aText - bText;\n        }\n\n        return bText - aText;\n\n      case 'Salary':\n        const normalizeSalary = (item) => item.slice(1).split(',').join('');\n\n        if (isAsc) {\n          return normalizeSalary(aText) - normalizeSalary(bText);\n        }\n\n        return normalizeSalary(bText) - normalizeSalary(aText);\n\n      default:\n    }\n  });\n\n  currentRows.forEach(item => tbodyRef.append(item));\n});\n\n// 2. When user clicks on a row, it should become selected.\n\nconst activeClass = 'active';\n\ntbodyRef.addEventListener('click', (e) => {\n  tableRows.forEach(item => item.classList.remove(activeClass));\n  e.target.parentElement.classList.add(activeClass);\n});\n\n// 3. Write a script to add a form to the document.\n// Form allows users to add new employees to the spreadsheet.\n// 4. Show notification if form data is invalid\n// (use notification from the previous tasks).\n\nfunction standardizeString(str) {\n  return str\n    .split(' ')\n    .reduce((line, word) => {\n      if (isNaN(word.trim())) {\n        return line + word[0].toUpperCase() + word.slice(1) + ' ';\n      }\n\n      return line;\n    }, 0)\n    .slice(1);\n};\n\nconst formEl = document.createElement('form');\n\nformEl.classList.add('new-employee-form');\n\ntableHeaders.forEach(item => {\n  const labelEl = document.createElement('label');\n  const headerTitle = item.textContent;\n\n  labelEl.textContent = item.textContent + ':';\n\n  if (headerTitle !== 'Office') {\n    const inputEl = document.createElement('input');\n\n    if (headerTitle === 'Age' || headerTitle === 'Salary') {\n      inputEl.type = 'number';\n      inputEl.min = 1;\n    } else {\n      inputEl.type = 'text';\n    }\n\n    inputEl.name = headerTitle.toLowerCase();\n    inputEl.dataset.qa = headerTitle.toLowerCase();\n\n    labelEl.append(inputEl);\n  } else {\n    const selectEl = document.createElement('select');\n    const selectOptions = ['Tokyo', 'Singapore', 'London', 'New York',\n      'Edinburgh', 'San Francisco'];\n\n    selectOptions.forEach(city => {\n      const optionEl = document.createElement('option');\n\n      optionEl.textContent = city;\n      selectEl.append(optionEl);\n    });\n\n    selectEl.name = headerTitle.toLowerCase();\n    selectEl.dataset.qa = headerTitle.toLowerCase();\n    labelEl.append(selectEl);\n  }\n\n  formEl.append(labelEl);\n});\n\nconst submitBtn = document.createElement('button');\n\nsubmitBtn.type = 'submit';\nsubmitBtn.textContent = 'Save to table';\n\nformEl.append(submitBtn);\ndocument.body.append(formEl);\n\nformEl.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  if (document.querySelector('.notification')) {\n    document.querySelector('.notification').remove();\n  }\n\n  const data = new FormData(formEl);\n  const dataObj = Object.fromEntries(data.entries());\n  const rowEl = document.createElement('tr');\n\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h2');\n  const notificationDescription = document.createElement('p');\n\n  notification.dataset.qa = 'notification';\n  notification.classList.add('notification');\n\n  notificationTitle.classList.add('title');\n\n  const addError = (message) => {\n    notification.classList.add('error');\n    notificationTitle.textContent = 'Error';\n\n    notificationDescription.textContent = message;\n  };\n\n  if (dataObj.name.length < 4 || (!isNaN(dataObj.name))) {\n    addError('Name must contain '\n    + 'at least 4 characters and have no numbers');\n  } else if (dataObj.position.length < 4 || (!isNaN(dataObj.position))) {\n    addError('Position must contain '\n    + 'at least 4 characters and have no numbers');\n  } else if (dataObj.age < 18 || dataObj.age > 90) {\n    addError('Age must be between 18 and 90');\n  } else if (dataObj.salary === '') {\n    addError('Salary must be filled in');\n  } else {\n    notification.classList.add('success');\n    notificationTitle.textContent = 'Success';\n\n    dataObj.salary = '$' + new Intl.NumberFormat('en-US')\n      .format(dataObj.salary);\n\n    notificationDescription.textContent = 'Person was added to the list';\n\n    for (const key in dataObj) {\n      const cellEl = document.createElement('td');\n\n      if (isNaN(dataObj[key])) {\n        dataObj[key] = standardizeString(dataObj[key]);\n      }\n\n      cellEl.textContent = dataObj[key];\n      rowEl.append(cellEl);\n    }\n    tbodyRef.append(rowEl);\n    e.target.reset();\n  }\n\n  notification.append(notificationTitle, notificationDescription);\n  document.body.append(notification);\n  setTimeout(() => notification.remove(), 3000);\n});\n\n// 5. Implement editing of table cells by double-clicking on it.\n\ntbodyRef.addEventListener('dblclick', (e) => {\n  const oldText = e.target.textContent;\n\n  e.target.textContent = '';\n\n  const inputEl = document.createElement('input');\n\n  inputEl.classList.add('cell-input');\n  e.target.append(inputEl);\n  inputEl.focus();\n\n  function validateInput(cell) {\n    switch (cell) {\n      case 0:\n      case 1:\n      case 2:\n        if (!isNaN(inputEl.value) || inputEl.value.length === 0) {\n          e.target.textContent = oldText;\n        } else {\n          e.target.textContent = standardizeString(inputEl.value);\n        }\n        break;\n\n      case 3:\n        if (isNaN(inputEl.value) || inputEl.value.length === 0) {\n          e.target.textContent = oldText;\n        } else {\n          e.target.textContent = inputEl.value;\n        }\n        break;\n\n      case 4:\n        if (isNaN(inputEl.value) || inputEl.value.length === 0) {\n          e.target.textContent = oldText;\n        } else {\n          e.target.textContent = '$' + new Intl.NumberFormat('en-US')\n            .format(inputEl.value);\n        }\n        break;\n      default:\n    }\n  }\n\n  inputEl.addEventListener('blur', (evnt) => {\n    const index = e.target.cellIndex;\n\n    validateInput(index);\n  });\n\n  inputEl.addEventListener('keydown', (evnt) => {\n    if (evnt.key === 'Enter') {\n      const index = e.target.cellIndex;\n\n      validateInput(index);\n    }\n  });\n});\n"]}